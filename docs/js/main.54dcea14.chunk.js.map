{"version":3,"sources":["useMouseRotation.js","Knob.jsx","App.jsx","index.js"],"names":["document","min","max","_onChange","mouseDown","mouseX","addRotationHandler","canvas","onChange","addEventListener","e","evt","preventDefault","deltaX","clientX","clientY","onMouseMove","createScene","ref","color","orbitRadius","width","height","scene","THREE","camera","renderer","antialias","alpha","light","position","set","hemiLight","add","addLights","setClearColor","setSize","background","current","appendChild","domElement","animate","requestAnimationFrame","render","twoPI","Math","PI","colorHexToString","toString","slice","Knob","cone","value","title","radialSegments","useRef","useMouseRotation","useEffect","geometry","rotation","x","addCone","y","handleRotation","deltaY","nornalisedRotation","roundedVal","abs","round","style","cursor","textAlign","display","justifyContent","borderTop","borderRadius","padding","marginTop","App","useState","setValue","value2","setValue2","value3","setValue3","fontFamily","fontWeight","margin","v","floor","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54dcea14.chunk.js","sourcesContent":["import React from 'react'\n\nexport default (document, min, max) => {\n    let mouseDown = false,\n    mouseX = 0,\n    mouseY = 0,\n    _onChange\n\n    function onMouseMove(evt) {\n        if (!mouseDown) {\n            return;\n        }\n\n        evt.preventDefault();\n\n        var deltaX = evt.clientX - mouseX,\n            deltaY = evt.clientY - mouseY;\n            mouseX = evt.clientX;\n            mouseY = evt.clientY;\n            _onChange(deltaX, 0);\n    }\n\n    function onMouseDown(evt) {\n        evt.preventDefault();\n\n        mouseDown = true;\n        mouseX = evt.clientX;\n        mouseY = evt.clientY;\n    }\n\n    function onMouseUp(evt) {\n        evt.preventDefault();\n\n        mouseDown = false;\n    }\n\n    function addRotationHandler(canvas, onChange) {\n        _onChange = onChange;\n\n        document.addEventListener('mousemove', function(e) {\n            onMouseMove(e);\n        }, false);\n        canvas.addEventListener('mousedown', function(e) {\n            onMouseDown(e);\n        }, false);\n        document.addEventListener('mouseup', function(e) {\n            onMouseUp(e);\n        }, false);\n    }\n\n    return {addRotationHandler}\n}","\nimport React, {useEffect, useRef} from 'react';\nimport useMouseRotation from './useMouseRotation';\nimport * as THREE from 'three'\n\nconst addLights = (scene, color) => {\n    let light = new THREE.DirectionalLight( 0xffffff, 0.40 );\n    light.position.set( -90, 400, 0 )\n\n    const hemiLight = new THREE.HemisphereLight(color, color, 0.3);\n    scene.add( hemiLight );\n    scene.add( light );\n\n    return [light, hemiLight]\n}\n\n\nconst addCone = (scene, color = 'yellow', width, height) => {\n    const geometry = new THREE.ConeGeometry( width / 8, height / 5.4, 9);\n    const cone = new THREE.Mesh(geometry, new THREE.MeshPhysicalMaterial( {\n        color\n    }));\n    cone.rotation.x += 1; \n    cone.position.set(0, 5, 0)\n\n    scene.add(cone);\n\n    return cone;\n}\n\nconst createScene = (ref, color, orbitRadius, width, height) => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera( 75, 1, 0.1, 1000 );\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha:true });\n    addLights(scene, color);\n\n    renderer.setClearColor( 0xffffff, 0 );\n    renderer.setSize(width, height);        \n\n    scene.background = null;\n    camera.position.set(0, orbitRadius, orbitRadius)\n    \n    ref.current.appendChild( renderer.domElement );\n\n    function animate() {\n        requestAnimationFrame(animate);\n        \n        renderer.render(scene, camera);\n    }\n\n    animate();\n\n    return scene;\n}\n\nconst twoPI = 2 * Math.PI\n\nconst Knob = ({onChange, min = 0, max = 1, value = 0, color, title = '', width = 150, height = 150, radialSegments = 8}) => {\n    const ref = useRef()\n    const {addRotationHandler} = useMouseRotation(document, min, max);\n    let scene;\n    let cone;\n\n    useEffect(() => {\n        scene = createScene(ref, color, width / 8, width, height)\n        cone = addCone(scene, color, width, height, radialSegments)\n        cone.rotation.y += ((value / max) % twoPI) * 100\n\n        addRotationHandler(ref.current, handleRotation);\n    }, [ref])\n\n    const handleRotation = (deltaX, deltaY) => {\n        cone.rotation.y += deltaX / 100;\n        cone.rotation.x += deltaY / 100;\n        \n        const nornalisedRotation = (cone.rotation.y % twoPI) / (twoPI)\n        const roundedVal = Math.abs(Math.round(nornalisedRotation * 10) / 10);\n        \n        onChange(min + (roundedVal * (max - min)))\n    }\n\n    return (\n        <div>\n            <div style={{width, height, cursor: 'grab'}} ref={ref}>\n            </div>\n            {title && <div style={{ textAlign: 'center'}}>\n                {title}\n            </div>\n            }\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n                <div style={{borderTop: `solid 3px ${colorHexToString(color)}`, borderRadius: 1, textAlign: 'center', padding: 5, marginTop: 5}}>\n                    {value}\n                </div>\n            </div>\n        </div>\n        \n    )\n  }\n\nconst colorHexToString = (color) => `#${('00000' + (color | 0).toString(16)).slice(-6)}`\n  \nexport default Knob","import React, {useState} from 'react';\nimport Knob from './Knob'\n\nconst App = () => {\n    const [value, setValue] = useState(0.6)\n    const [value2, setValue2] = useState(4)\n    const [value3, setValue3] = useState(0.1)\n\n    return (\n        <div style={{display: 'flex', fontFamily: 'Roboto', fontWeight: 800}}>\n            <span style={{margin: 10}}>\n                <Knob value={value} onChange={setValue} title=\"Opacity\" color={0xffff00}/>\n            </span>\n            <span style={{margin: 10}}>\n                <Knob value={value2} onChange={(v) => setValue2(Math.floor(v))} title=\"Distortion\" min={1} max={10} color={0xff0000} width={125} height={125}/>\n            </span>\n            <span style={{margin: 10}}>\n                <Knob value={value3} onChange={setValue3} title=\"Blur\" min={0} max={0.5} color={0x00ff00} width={100} height={100}/>\n            </span>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}